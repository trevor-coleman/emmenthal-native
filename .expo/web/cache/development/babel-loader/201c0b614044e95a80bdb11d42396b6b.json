{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Api } from \"../services/api\";\nvar ReactotronDev;\n\nif (__DEV__) {\n  var _require = require(\"../services/reactotron\"),\n      Reactotron = _require.Reactotron;\n\n  ReactotronDev = Reactotron;\n}\n\nexport var Environment = function () {\n  function Environment() {\n    _classCallCheck(this, Environment);\n\n    if (__DEV__) {\n      this.reactotron = new ReactotronDev();\n    }\n\n    this.api = new Api();\n  }\n\n  _createClass(Environment, [{\n    key: \"setup\",\n    value: function setup() {\n      return _regeneratorRuntime.async(function setup$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!__DEV__) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(this.reactotron.setup());\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(this.api.setup());\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return Environment;\n}();","map":{"version":3,"sources":["/Users/trevorcoleman/dev/trevor-coleman/EmmenthalCloud/app/models/environment.ts"],"names":["Api","ReactotronDev","__DEV__","require","Reactotron","Environment","reactotron","api","setup"],"mappings":";;;AAAA,SAASA,GAAT;AAEA,IAAIC,aAAJ;;AACA,IAAIC,OAAJ,EAAa;AACX,iBAAuBC,OAAO,0BAA9B;AAAA,MAAQC,UAAR,YAAQA,UAAR;;AACAH,EAAAA,aAAa,GAAGG,UAAhB;AACD;;AAMD,WAAaC,WAAb;AACE,yBAAc;AAAA;;AAEZ,QAAIH,OAAJ,EAAa;AAEX,WAAKI,UAAL,GAAkB,IAAIL,aAAJ,EAAlB;AACD;;AACD,SAAKM,GAAL,GAAW,IAAIP,GAAJ,EAAX;AACD;;AARH;AAAA;AAAA,WAUE;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEME,OAFN;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAGU,KAAKI,UAAL,CAAgBE,KAAhB,EAHV;;AAAA;AAAA;AAAA,+CAKQ,KAAKD,GAAL,CAASC,KAAT,EALR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;;AAAA;AAAA","sourcesContent":["import { Api } from \"../services/api\"\n\nlet ReactotronDev\nif (__DEV__) {\n  const { Reactotron } = require(\"../services/reactotron\")\n  ReactotronDev = Reactotron\n}\n\n/**\n * The environment is a place where services and shared dependencies between\n * models live.  They are made available to every model via dependency injection.\n */\nexport class Environment {\n  constructor() {\n    // create each service\n    if (__DEV__) {\n      // dev-only services\n      this.reactotron = new ReactotronDev()\n    }\n    this.api = new Api()\n  }\n\n  async setup() {\n    // allow each service to setup\n    if (__DEV__) {\n      await this.reactotron.setup()\n    }\n    await this.api.setup()\n  }\n\n  /**\n   * Reactotron is only available in dev.\n   */\n  reactotron: typeof ReactotronDev\n\n  /**\n   * Our api.\n   */\n  api: Api\n}\n"]},"metadata":{},"sourceType":"module"}