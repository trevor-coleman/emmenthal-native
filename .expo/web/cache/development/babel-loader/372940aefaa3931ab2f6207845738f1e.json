{"ast":null,"code":"import * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\";\nimport { Toggle } from \"../../utils/react-powerplug\";\nimport { Switch } from \"./switch\";\nvar styleArray = [{\n  borderColor: \"#686868\"\n}];\nvar trackOffStyle = [{\n  backgroundColor: \"#686868\"\n}, {\n  height: 80,\n  borderRadius: 0\n}];\nvar trackOnStyle = [{\n  backgroundColor: \"#b1008e\",\n  borderColor: \"#686868\"\n}, {\n  height: 80,\n  borderRadius: 0\n}];\nvar thumbOffStyle = [{\n  backgroundColor: \"#b1008e\",\n  borderColor: \"#686868\"\n}, {\n  height: 80,\n  borderRadius: 0\n}];\nvar thumbOnStyle = [{\n  backgroundColor: \"#f0c\"\n}, {\n  height: 80,\n  borderRadius: 0,\n  borderColor: \"#686868\"\n}];\nstoriesOf(\"Switch\", module).addDecorator(function (fn) {\n  return React.createElement(StoryScreen, null, fn());\n}).add(\"Behaviour\", function () {\n  return React.createElement(Story, null, React.createElement(UseCase, {\n    text: \"The Toggle Switch\",\n    usage: \"Use the switch to represent on/off states.\"\n  }, React.createElement(Toggle, {\n    initial: false\n  }, function (_ref) {\n    var on = _ref.on,\n        toggle = _ref.toggle;\n    return React.createElement(Switch, {\n      value: on,\n      onToggle: toggle\n    });\n  })), React.createElement(UseCase, {\n    text: \"value = true\",\n    usage: \"This is permanently on.\"\n  }, React.createElement(Switch, {\n    value: true\n  })), React.createElement(UseCase, {\n    text: \"value = false\",\n    usage: \"This is permanantly off.\"\n  }, React.createElement(Switch, {\n    value: false\n  })));\n}).add(\"Styling\", function () {\n  return React.createElement(Story, null, React.createElement(UseCase, {\n    text: \"Custom Styling\",\n    usage: \"Promise me this won't happen.\"\n  }, React.createElement(Toggle, {\n    initial: false\n  }, function (_ref2) {\n    var on = _ref2.on,\n        toggle = _ref2.toggle;\n    return React.createElement(View, null, React.createElement(Switch, {\n      trackOnStyle: {\n        backgroundColor: \"green\",\n        borderColor: \"black\"\n      },\n      trackOffStyle: {\n        backgroundColor: \"red\",\n        borderColor: \"maroon\"\n      },\n      thumbOnStyle: {\n        backgroundColor: \"cyan\"\n      },\n      thumbOffStyle: {\n        backgroundColor: \"pink\"\n      },\n      value: on,\n      onToggle: toggle\n    }));\n  })), React.createElement(UseCase, {\n    text: \"Style array\",\n    usage: \"This either.\"\n  }, React.createElement(Toggle, {\n    initial: false\n  }, function (_ref3) {\n    var on = _ref3.on,\n        toggle = _ref3.toggle;\n    return React.createElement(View, null, React.createElement(Switch, {\n      style: styleArray,\n      trackOffStyle: trackOffStyle,\n      trackOnStyle: trackOnStyle,\n      thumbOffStyle: thumbOffStyle,\n      thumbOnStyle: thumbOnStyle,\n      value: on,\n      onToggle: toggle\n    }));\n  })));\n});","map":{"version":3,"sources":["/Users/trevorcoleman/dev/trevor-coleman/EmmenthalCloud/app/components/switch/switch.story.tsx"],"names":["React","storiesOf","StoryScreen","Story","UseCase","Toggle","Switch","styleArray","borderColor","trackOffStyle","backgroundColor","height","borderRadius","trackOnStyle","thumbOffStyle","thumbOnStyle","module","addDecorator","fn","add","on","toggle"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable react-native/no-color-literals */\n\nimport * as React from \"react\"\nimport { View, ViewStyle } from \"react-native\"\nimport { storiesOf } from \"@storybook/react-native\"\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\"\nimport { Toggle } from \"../../utils/react-powerplug\"\nimport { Switch } from \"./switch\"\n\ndeclare let module\n\nconst styleArray: ViewStyle[] = [{ borderColor: \"#686868\" }]\n\nconst trackOffStyle: ViewStyle[] = [\n  { backgroundColor: \"#686868\" },\n  {\n    height: 80,\n    borderRadius: 0,\n  },\n]\nconst trackOnStyle: ViewStyle[] = [\n  {\n    backgroundColor: \"#b1008e\",\n    borderColor: \"#686868\",\n  },\n  {\n    height: 80,\n    borderRadius: 0,\n  },\n]\nconst thumbOffStyle: ViewStyle[] = [\n  {\n    backgroundColor: \"#b1008e\",\n    borderColor: \"#686868\",\n  },\n  {\n    height: 80,\n    borderRadius: 0,\n  },\n]\nconst thumbOnStyle: ViewStyle[] = [\n  { backgroundColor: \"#f0c\" },\n  {\n    height: 80,\n    borderRadius: 0,\n    borderColor: \"#686868\",\n  },\n]\n\nstoriesOf(\"Switch\", module)\n  .addDecorator((fn) => <StoryScreen>{fn()}</StoryScreen>)\n  .add(\"Behaviour\", () => (\n    <Story>\n      <UseCase text=\"The Toggle Switch\" usage=\"Use the switch to represent on/off states.\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => <Switch value={on} onToggle={toggle} />}\n        </Toggle>\n      </UseCase>\n      <UseCase text=\"value = true\" usage=\"This is permanently on.\">\n        <Switch value={true} />\n      </UseCase>\n      <UseCase text=\"value = false\" usage=\"This is permanantly off.\">\n        <Switch value={false} />\n      </UseCase>\n    </Story>\n  ))\n  .add(\"Styling\", () => (\n    <Story>\n      <UseCase text=\"Custom Styling\" usage=\"Promise me this won't happen.\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => (\n            <View>\n              <Switch\n                trackOnStyle={{ backgroundColor: \"green\", borderColor: \"black\" }}\n                trackOffStyle={{ backgroundColor: \"red\", borderColor: \"maroon\" }}\n                thumbOnStyle={{ backgroundColor: \"cyan\" }}\n                thumbOffStyle={{ backgroundColor: \"pink\" }}\n                value={on}\n                onToggle={toggle}\n              />\n            </View>\n          )}\n        </Toggle>\n      </UseCase>\n\n      <UseCase text=\"Style array\" usage=\"This either.\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => (\n            <View>\n              <Switch\n                style={styleArray}\n                trackOffStyle={trackOffStyle}\n                trackOnStyle={trackOnStyle}\n                thumbOffStyle={thumbOffStyle}\n                thumbOnStyle={thumbOnStyle}\n                // trackOnStyle={{ backgroundColor: \"green\", borderColor: \"black\" }}\n                // trackOffStyle={{ backgroundColor: \"red\", borderColor: \"maroon\" }}\n                // thumbOnStyle={{ backgroundColor: \"cyan\" }}\n                // thumbOffStyle={{ backgroundColor: \"pink\" }}\n\n                value={on}\n                onToggle={toggle}\n              />\n            </View>\n          )}\n        </Toggle>\n      </UseCase>\n    </Story>\n  ))\n"]},"metadata":{},"sourceType":"module"}