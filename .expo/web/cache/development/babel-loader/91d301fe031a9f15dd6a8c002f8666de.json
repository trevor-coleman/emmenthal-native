{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nexport var State = function State(_ref) {\n  var initial = _ref.initial,\n      children = _ref.children;\n\n  var _useState = useState(initial),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  return React.createElement(React.Fragment, null, children({\n    state: state,\n    setState: setState\n  }));\n};\nexport var Toggle = function Toggle(_ref2) {\n  var initial = _ref2.initial,\n      children = _ref2.children;\n\n  var _useState3 = useState(initial),\n      _useState4 = _slicedToArray(_useState3, 2),\n      on = _useState4[0],\n      toggle = _useState4[1];\n\n  return React.createElement(React.Fragment, null, children({\n    on: on,\n    toggle: toggle\n  }));\n};","map":{"version":3,"sources":["/Users/trevorcoleman/dev/trevor-coleman/EmmenthalCloud/app/utils/react-powerplug.tsx"],"names":["React","useState","State","initial","children","state","setState","Toggle","on","toggle"],"mappings":";AAGA,OAAOA,KAAP,IAA2BC,QAA3B,QAAqE,OAArE;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAMf;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,QAII,QAJJA,QAII;;AACJ,kBAA0BH,QAAQ,CAACE,OAAD,CAAlC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAcC,QAAd;;AACA,SAAO,0CAAGF,QAAQ,CAAC;AAAEC,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,QAAQ,EAARA;AAAT,GAAD,CAAX,CAAP;AACD,CATM;AAWP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,QAMhB;AAAA,MALJJ,OAKI,SALJA,OAKI;AAAA,MAJJC,QAII,SAJJA,QAII;;AACJ,mBAAqBH,QAAQ,CAACE,OAAD,CAA7B;AAAA;AAAA,MAAOK,EAAP;AAAA,MAAWC,MAAX;;AACA,SAAO,0CAAGL,QAAQ,CAAC;AAAEI,IAAAA,EAAE,EAAFA,EAAF;AAAMC,IAAAA,MAAM,EAANA;AAAN,GAAD,CAAX,CAAP;AACD,CATM","sourcesContent":["// Replaces react-powerplug which is not maintained\n// TODO: Eventually remove entirely\n\nimport React, { ReactNode, useState, Dispatch, SetStateAction } from \"react\"\n\nexport const State = ({\n  initial,\n  children,\n}: {\n  initial: { value: any }\n  children: (props: { state: { value: any }; setState: Dispatch<SetStateAction<any>> }) => ReactNode\n}) => {\n  const [state, setState] = useState(initial)\n  return <>{children({ state, setState })}</>\n}\n\nexport const Toggle = ({\n  initial,\n  children,\n}: {\n  initial: boolean\n  children: (props: { on: boolean; toggle: Dispatch<SetStateAction<boolean>> }) => ReactNode\n}) => {\n  const [on, toggle] = useState(initial)\n  return <>{children({ on, toggle })}</>\n}\n"]},"metadata":{},"sourceType":"module"}