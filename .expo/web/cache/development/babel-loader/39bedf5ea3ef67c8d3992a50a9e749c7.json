{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Text, Layout, Divider } from \"@ui-kitten/components\";\nimport { color } from \"../../theme\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport { addDays } from \"date-fns\";\nimport { auth, useGoogleSignIn } from \"../../services/firebase\";\nimport { useStores } from \"../../models\";\nimport { CalendarList } from \"../../components\";\nvar ROOT = {\n  backgroundColor: color.palette.black,\n  flex: 1\n};\nvar BUTTON = {\n  width: 200,\n  marginVertical: 5\n};\nvar BUTTON_TEXT = {\n  fontSize: 24\n};\nWebBrowser.maybeCompleteAuthSession();\nexport var HomeScreen = observer(function HomeScreen() {\n  var _auth$currentUser$dis, _auth$currentUser;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      calendars = _React$useState2[0],\n      setCalendars = _React$useState2[1];\n\n  var _useGoogleSignIn = useGoogleSignIn(),\n      request = _useGoogleSignIn.request,\n      promptAsync = _useGoogleSignIn.promptAsync;\n\n  var _useStores = useStores(),\n      authStore = _useStores.authStore,\n      calendarStore = _useStores.calendarStore;\n\n  var calendarId = calendarStore.calendarIds[8].id;\n  var freeTimes = calendarStore.freeTimeText;\n  return React.createElement(Layout, {\n    style: {\n      flex: 1,\n      justifyContent: \"flex-start\",\n      alignItems: \"flex-start\",\n      flexDirection: \"row\"\n    }\n  }, React.createElement(View, null, React.createElement(Text, {\n    category: \"h2\"\n  }, \"\" + ((_auth$currentUser$dis = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.displayName) != null ? _auth$currentUser$dis : \"Signed Out\")), React.createElement(Button, {\n    style: BUTTON,\n    disabled: !request,\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(promptAsync());\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, \"Sign In\"), React.createElement(Button, {\n    style: BUTTON,\n    disabled: authStore.token === \"\",\n    onPress: function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(calendarStore.getCalendars());\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, \"Get Calendars\"), React.createElement(Button, {\n    style: BUTTON,\n    disabled: authStore.token === \"\",\n    onPress: function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(calendarStore.getFreeBusy({\n                timeMax: addDays(new Date(), 7),\n                timeMin: new Date()\n              }));\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, \"Get Free Busy\"), React.createElement(Text, {\n    category: \"h2\"\n  }, \"Calendar List\"), React.createElement(Divider, null), React.createElement(CalendarList, null), React.createElement(Divider, null)), React.createElement(View, null, React.createElement(View, {\n    style: {\n      marginBottom: 20\n    }\n  }, React.createElement(Text, {\n    category: \"h2\"\n  }, \"FREE TIMES\")), React.createElement(Text, null, freeTimes)));\n});","map":{"version":3,"sources":["/Users/trevorcoleman/dev/trevor-coleman/EmmenthalCloud/app/screens/home/home-screen.tsx"],"names":["React","observer","Button","Text","Layout","Divider","color","WebBrowser","addDays","auth","useGoogleSignIn","useStores","CalendarList","ROOT","backgroundColor","palette","black","flex","BUTTON","width","marginVertical","BUTTON_TEXT","fontSize","maybeCompleteAuthSession","HomeScreen","useState","calendars","setCalendars","request","promptAsync","authStore","calendarStore","calendarId","calendarIds","id","freeTimes","freeTimeText","justifyContent","alignItems","flexDirection","currentUser","displayName","token","getCalendars","getFreeBusy","timeMax","Date","timeMin","marginBottom"],"mappings":"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","sourcesContent":["import React, { FC } from \"react\"\nimport { observer } from \"mobx-react-lite\"\nimport { TextStyle, View, ViewStyle } from \"react-native\"\nimport { StackScreenProps } from \"@react-navigation/stack\"\nimport { NavigatorParamList } from \"../../navigators\"\nimport { Button, Text, Layout, Divider } from \"@ui-kitten/components\"\nimport { color } from \"../../theme\"\nimport * as WebBrowser from \"expo-web-browser\"\nimport { addDays, subDays } from \"date-fns\"\n\nimport { auth, useGoogleSignIn } from \"../../services/firebase\"\nimport { api } from \"../../services/api\"\nimport { useStores } from \"../../models\"\nimport { formatFreeTimeText } from \"../../services/free-busy/free-busy\"\nimport { CalendarList } from \"../../components\"\n\nconst ROOT: ViewStyle = {\n  backgroundColor: color.palette.black,\n  flex: 1,\n}\n\nconst BUTTON: ViewStyle = {\n  width: 200,\n  marginVertical: 5,\n}\n\nconst BUTTON_TEXT: TextStyle = {\n  fontSize: 24,\n}\n\nWebBrowser.maybeCompleteAuthSession()\n\nexport const HomeScreen: FC<StackScreenProps<NavigatorParamList, \"home\">> = observer(\n  function HomeScreen() {\n    const [calendars, setCalendars] = React.useState([])\n    const { request, promptAsync } = useGoogleSignIn()\n    const { authStore, calendarStore } = useStores()\n\n    const calendarId = calendarStore.calendarIds[8].id\n\n    const freeTimes = calendarStore.freeTimeText\n\n    return (\n      <Layout\n        style={{\n          flex: 1,\n          justifyContent: \"flex-start\",\n          alignItems: \"flex-start\",\n          flexDirection: \"row\",\n        }}\n      >\n        <View>\n          <Text category={\"h2\"}>{`${auth.currentUser?.displayName ?? \"Signed Out\"}`}</Text>\n          <Button\n            style={BUTTON}\n            disabled={!request}\n            onPress={async () => {\n              await promptAsync()\n            }}\n          >\n            Sign In\n          </Button>\n\n          <Button\n            style={BUTTON}\n            disabled={authStore.token === \"\"}\n            onPress={async () => {\n              await calendarStore.getCalendars()\n            }}\n          >\n            Get Calendars\n          </Button>\n\n          <Button\n            style={BUTTON}\n            disabled={authStore.token === \"\"}\n            onPress={async () => {\n              await calendarStore.getFreeBusy({\n                timeMax: addDays(new Date(), 7),\n                timeMin: new Date(),\n              })\n            }}\n          >\n            Get Free Busy\n          </Button>\n\n          <Text category={\"h2\"}>Calendar List</Text>\n          <Divider />\n          <CalendarList />\n          <Divider />\n        </View>\n        <View>\n          <View style={{ marginBottom: 20 }}>\n            <Text category={\"h2\"}>FREE TIMES</Text>\n          </View>\n          <Text>{freeTimes}</Text>\n        </View>\n      </Layout>\n    )\n  },\n)\n"]},"metadata":{},"sourceType":"module"}