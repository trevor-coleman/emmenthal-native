{"ast":null,"code":"import { getRoot } from \"mobx-state-tree\";\nexport var withRootStore = function withRootStore(self) {\n  return {\n    views: {\n      get rootStore() {\n        return getRoot(self);\n      }\n\n    }\n  };\n};","map":{"version":3,"sources":["/Users/trevorcoleman/dev/trevor-coleman/EmmenthalCloud/app/models/extensions/with-root-store.ts"],"names":["getRoot","withRootStore","self","views","rootStore"],"mappings":"AAAA,SAASA,OAAT,QAAwC,iBAAxC;AAOA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD;AAAA,SAA2B;AACtDC,IAAAA,KAAK,EAAE;AAIL,UAAIC,SAAJ,GAA2B;AACzB,eAAOJ,OAAO,CAAwBE,IAAxB,CAAd;AACD;;AANI;AAD+C,GAA3B;AAAA,CAAtB","sourcesContent":["import { getRoot, IStateTreeNode } from \"mobx-state-tree\"\nimport { RootStore, RootStoreModel } from \"../root-store/root-store\"\n\n/**\n * Adds a rootStore property to the node for a convenient\n * and strongly typed way for stores to access other stores.\n */\nexport const withRootStore = (self: IStateTreeNode) => ({\n  views: {\n    /**\n     * The root store.\n     */\n    get rootStore(): RootStore {\n      return getRoot<typeof RootStoreModel>(self)\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}