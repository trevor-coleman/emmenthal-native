{"ast":null,"code":"import { types } from \"mobx-state-tree\";\nimport { FreeBusyItemModel } from \"../free-busy-item/free-busy-item\";\nexport var CalendarModel = types.model(\"Calendar\").props({\n  id: types.identifier,\n  colorId: types.maybe(types.string),\n  foregroundColor: types.maybe(types.string),\n  accessRole: types.maybe(types.string),\n  backgroundColor: types.maybe(types.string),\n  summary: types.maybe(types.string),\n  summaryOverride: types.maybe(types.string),\n  calendarName: types.maybe(types.string),\n  busy: types.optional(types.array(FreeBusyItemModel), []),\n  timeZone: types.maybe(types.string)\n}).views(function (self) {\n  return {};\n}).actions(function (self) {\n  return {\n    setBusy: function setBusy(busy) {\n      self.busy.replace(busy.map(function (_ref) {\n        var start = _ref.start,\n            end = _ref.end;\n        return {\n          start: new Date(start),\n          end: new Date(end)\n        };\n      }));\n    }\n  };\n});\nexport var createCalendarDefaultModel = function createCalendarDefaultModel() {\n  return types.optional(CalendarModel, {});\n};","map":{"version":3,"sources":["/Users/trevorcoleman/dev/trevor-coleman/EmmenthalCloud/app/models/calendar/calendar.ts"],"names":["types","FreeBusyItemModel","CalendarModel","model","props","id","identifier","colorId","maybe","string","foregroundColor","accessRole","backgroundColor","summary","summaryOverride","calendarName","busy","optional","array","timeZone","views","self","actions","setBusy","replace","map","start","end","Date","createCalendarDefaultModel"],"mappings":"AAAA,SAAgCA,KAAhC,QAA6C,iBAA7C;AACA,SAASC,iBAAT;AAMA,OAAO,IAAMC,aAAa,GAAGF,KAAK,CAC/BG,KAD0B,CACpB,UADoB,EAE1BC,KAF0B,CAEpB;AACLC,EAAAA,EAAE,EAAEL,KAAK,CAACM,UADL;AAELC,EAAAA,OAAO,EAAEP,KAAK,CAACQ,KAAN,CAAYR,KAAK,CAACS,MAAlB,CAFJ;AAGLC,EAAAA,eAAe,EAAEV,KAAK,CAACQ,KAAN,CAAYR,KAAK,CAACS,MAAlB,CAHZ;AAILE,EAAAA,UAAU,EAAEX,KAAK,CAACQ,KAAN,CAAYR,KAAK,CAACS,MAAlB,CAJP;AAKLG,EAAAA,eAAe,EAAEZ,KAAK,CAACQ,KAAN,CAAYR,KAAK,CAACS,MAAlB,CALZ;AAMLI,EAAAA,OAAO,EAAEb,KAAK,CAACQ,KAAN,CAAYR,KAAK,CAACS,MAAlB,CANJ;AAOLK,EAAAA,eAAe,EAAEd,KAAK,CAACQ,KAAN,CAAYR,KAAK,CAACS,MAAlB,CAPZ;AAQLM,EAAAA,YAAY,EAAEf,KAAK,CAACQ,KAAN,CAAYR,KAAK,CAACS,MAAlB,CART;AASLO,EAAAA,IAAI,EAAEhB,KAAK,CAACiB,QAAN,CAAejB,KAAK,CAACkB,KAAN,CAAYjB,iBAAZ,CAAf,EAA+C,EAA/C,CATD;AAULkB,EAAAA,QAAQ,EAAEnB,KAAK,CAACQ,KAAN,CAAYR,KAAK,CAACS,MAAlB;AAVL,CAFoB,EAc1BW,KAd0B,CAcpB,UAACC,IAAD;AAAA,SAAW,EAAX;AAAA,CAdoB,EAe1BC,OAf0B,CAelB,UAACD,IAAD;AAAA,SAAW;AAClBE,IAAAA,OADkB,mBACVP,IADU,EAC6B;AAC7CK,MAAAA,IAAI,CAACL,IAAL,CAAUQ,OAAV,CACER,IAAI,CAACS,GAAL,CAAS;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,YAAUC,GAAV,QAAUA,GAAV;AAAA,eAAqB;AAC5BD,UAAAA,KAAK,EAAE,IAAIE,IAAJ,CAASF,KAAT,CADqB;AAE5BC,UAAAA,GAAG,EAAE,IAAIC,IAAJ,CAASD,GAAT;AAFuB,SAArB;AAAA,OAAT,CADF;AAMD;AARiB,GAAX;AAAA,CAfkB,CAAtB;AA8BP,OAAO,IAAME,0BAA0B,GAAG,SAA7BA,0BAA6B;AAAA,SAAM7B,KAAK,CAACiB,QAAN,CAAef,aAAf,EAA8B,EAA9B,CAAN;AAAA,CAAnC","sourcesContent":["import { Instance, SnapshotOut, types } from \"mobx-state-tree\"\nimport { FreeBusyItemModel } from \"../free-busy-item/free-busy-item\"\nimport { calendar_v3 } from \"googleapis\"\n\n/**\n * Model description here for TypeScript hints.\n */\nexport const CalendarModel = types\n  .model(\"Calendar\")\n  .props({\n    id: types.identifier,\n    colorId: types.maybe(types.string),\n    foregroundColor: types.maybe(types.string),\n    accessRole: types.maybe(types.string),\n    backgroundColor: types.maybe(types.string),\n    summary: types.maybe(types.string),\n    summaryOverride: types.maybe(types.string),\n    calendarName: types.maybe(types.string),\n    busy: types.optional(types.array(FreeBusyItemModel), []),\n    timeZone: types.maybe(types.string),\n  })\n  .views((self) => ({})) // eslint-disable-line @typescript-eslint/no-unused-vars\n  .actions((self) => ({\n    setBusy(busy: calendar_v3.Schema$TimePeriod[]) {\n      self.busy.replace(\n        busy.map(({ start, end }) => ({\n          start: new Date(start),\n          end: new Date(end),\n        })),\n      )\n    },\n  })) // eslint-disable-line @typescript-eslint/no-unused-vars\n\ntype CalendarType = Instance<typeof CalendarModel>\nexport interface Calendar extends CalendarType {}\ntype CalendarSnapshotType = SnapshotOut<typeof CalendarModel>\nexport interface CalendarSnapshot extends CalendarSnapshotType {}\nexport const createCalendarDefaultModel = () => types.optional(CalendarModel, {})\n"]},"metadata":{},"sourceType":"module"}