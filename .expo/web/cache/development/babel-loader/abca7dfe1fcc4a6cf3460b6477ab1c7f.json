{"ast":null,"code":"import React from \"react\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\";\nimport { Text, TextField } from \"../\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { State } from \"../../utils/react-powerplug\";\nvar styleArray = [{\n  paddingHorizontal: 30\n}, {\n  borderWidth: 30\n}];\nvar inputStyleArray = [{\n  backgroundColor: \"rebeccapurple\",\n  color: \"white\",\n  padding: 40\n}, {\n  borderWidth: 10,\n  borderRadius: 4,\n  borderColor: \"#7fff00\"\n}];\nvar alertWhenFocused = true;\nstoriesOf(\"TextField\", module).addDecorator(function (fn) {\n  return React.createElement(StoryScreen, null, fn());\n}).add(\"Labelling\", function () {\n  return React.createElement(Story, null, React.createElement(UseCase, {\n    text: \"Normal text\",\n    usage: \"Use placeholder and label to set the text.\"\n  }, React.createElement(State, {\n    initial: {\n      value: \"\"\n    }\n  }, function (_ref) {\n    var state = _ref.state,\n        setState = _ref.setState;\n    return React.createElement(TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      label: \"Name\",\n      placeholder: \"omg your name\"\n    });\n  })), React.createElement(UseCase, {\n    text: \"i18n text\",\n    usage: \"Use placeholderTx and labelTx for i18n lookups\"\n  }, React.createElement(State, {\n    initial: {\n      value: \"\"\n    }\n  }, function (_ref2) {\n    var state = _ref2.state,\n        setState = _ref2.setState;\n    return React.createElement(TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      placeholderTx: \"storybook.placeholder\",\n      labelTx: \"storybook.field\"\n    });\n  })));\n}).add(\"Style Overrides\", function () {\n  return React.createElement(Story, null, React.createElement(UseCase, {\n    noPad: true,\n    text: \"Container Styles\",\n    usage: \"Useful for applying margins when laying out a form to remove padding if the form brings its own.\"\n  }, React.createElement(State, {\n    initial: {\n      value: \"Inigo\"\n    }\n  }, function (_ref3) {\n    var state = _ref3.state,\n        setState = _ref3.setState;\n    return React.createElement(TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      label: \"First Name\",\n      style: {\n        paddingTop: 0,\n        paddingHorizontal: 40\n      }\n    });\n  }), React.createElement(State, {\n    initial: {\n      value: \"Montoya\"\n    }\n  }, function (_ref4) {\n    var state = _ref4.state,\n        setState = _ref4.setState;\n    return React.createElement(TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      label: \"Last Name\",\n      style: {\n        paddingBottom: 0\n      }\n    });\n  })), React.createElement(UseCase, {\n    text: \"Input Styles\",\n    usage: \"Useful for 1-off exceptions.  Try to steer towards presets for this kind of thing.\"\n  }, React.createElement(State, {\n    initial: {\n      value: \"fancy colour\"\n    }\n  }, function (_ref5) {\n    var state = _ref5.state,\n        setState = _ref5.setState;\n    return React.createElement(TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      label: \"Name\",\n      inputStyle: {\n        backgroundColor: \"rebeccapurple\",\n        color: \"white\",\n        padding: 40,\n        borderWidth: 10,\n        borderRadius: 4,\n        borderColor: \"hotpink\"\n      }\n    });\n  }), React.createElement(Text, {\n    text: \"* attention designers:  i am so sorry\",\n    preset: \"secondary\"\n  })), React.createElement(UseCase, {\n    text: \"Style array\",\n    usage: \"Useful for 1-off exceptions, but using style arrays.\"\n  }, React.createElement(State, {\n    initial: {\n      value: \"fancy colour\"\n    }\n  }, function (_ref6) {\n    var state = _ref6.state,\n        setState = _ref6.setState;\n    return React.createElement(TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      label: \"Name\",\n      style: styleArray,\n      inputStyle: inputStyleArray\n    });\n  }), React.createElement(Text, {\n    text: \"* attention designers:  i am so sorry\",\n    preset: \"secondary\"\n  })));\n}).add(\"Ref Forwarding\", function () {\n  return React.createElement(Story, null, React.createElement(UseCase, {\n    text: \"Ref Forwarding\",\n    usage: \"\"\n  }, React.createElement(State, {\n    initial: {\n      value: \"fancy colour\"\n    }\n  }, function (_ref7) {\n    var state = _ref7.state,\n        setState = _ref7.setState;\n    return React.createElement(TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      label: \"Name\",\n      inputStyle: {\n        backgroundColor: \"rebeccapurple\",\n        color: \"white\",\n        padding: 40,\n        borderWidth: 10,\n        borderRadius: 4,\n        borderColor: \"hotpink\"\n      },\n      forwardedRef: function forwardedRef(ref) {\n        return ref;\n      },\n      onFocus: function onFocus() {\n        if (alertWhenFocused) {\n          alertWhenFocused = false;\n          Alert.alert(\"Text field focuesed with forwarded ref!\");\n        }\n      }\n    });\n  }), React.createElement(Text, {\n    text: \"* attention designers:  i am so sorry\",\n    preset: \"secondary\"\n  })));\n});","map":{"version":3,"sources":["/Users/trevorcoleman/dev/trevor-coleman/EmmenthalCloud/app/components/text-field/text-field.story.tsx"],"names":["React","storiesOf","StoryScreen","Story","UseCase","Text","TextField","State","styleArray","paddingHorizontal","borderWidth","inputStyleArray","backgroundColor","color","padding","borderRadius","borderColor","alertWhenFocused","module","addDecorator","fn","add","value","state","setState","paddingTop","paddingBottom","ref","Alert","alert"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable react-native/no-color-literals */\n\nimport React from \"react\"\nimport { storiesOf } from \"@storybook/react-native\"\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\"\nimport { Text, TextField } from \"../\"\nimport { ViewStyle, TextStyle, Alert } from \"react-native\"\nimport { State } from \"../../utils/react-powerplug\"\n\ndeclare let module\n\nconst styleArray: ViewStyle[] = [{ paddingHorizontal: 30 }, { borderWidth: 30 }]\n\nconst inputStyleArray: TextStyle[] = [\n  {\n    backgroundColor: \"rebeccapurple\",\n    color: \"white\",\n    padding: 40,\n  },\n  {\n    borderWidth: 10,\n    borderRadius: 4,\n    borderColor: \"#7fff00\",\n  },\n]\nlet alertWhenFocused = true\n\nstoriesOf(\"TextField\", module)\n  .addDecorator((fn) => <StoryScreen>{fn()}</StoryScreen>)\n  .add(\"Labelling\", () => (\n    <Story>\n      <UseCase text=\"Normal text\" usage=\"Use placeholder and label to set the text.\">\n        <State initial={{ value: \"\" }}>\n          {({ state, setState }) => (\n            <TextField\n              onChangeText={(value) => setState({ value })}\n              value={state.value}\n              label=\"Name\"\n              placeholder=\"omg your name\"\n            />\n          )}\n        </State>\n      </UseCase>\n\n      <UseCase text=\"i18n text\" usage=\"Use placeholderTx and labelTx for i18n lookups\">\n        <State initial={{ value: \"\" }}>\n          {({ state, setState }) => (\n            <TextField\n              onChangeText={(value) => setState({ value })}\n              value={state.value}\n              placeholderTx=\"storybook.placeholder\"\n              labelTx=\"storybook.field\"\n            />\n          )}\n        </State>\n      </UseCase>\n    </Story>\n  ))\n  .add(\"Style Overrides\", () => (\n    <Story>\n      <UseCase\n        noPad\n        text=\"Container Styles\"\n        usage=\"Useful for applying margins when laying out a form to remove padding if the form brings its own.\"\n      >\n        <State initial={{ value: \"Inigo\" }}>\n          {({ state, setState }) => (\n            <TextField\n              onChangeText={(value) => setState({ value })}\n              value={state.value}\n              label=\"First Name\"\n              style={{ paddingTop: 0, paddingHorizontal: 40 }}\n            />\n          )}\n        </State>\n        <State initial={{ value: \"Montoya\" }}>\n          {({ state, setState }) => (\n            <TextField\n              onChangeText={(value) => setState({ value })}\n              value={state.value}\n              label=\"Last Name\"\n              style={{ paddingBottom: 0 }}\n            />\n          )}\n        </State>\n      </UseCase>\n      <UseCase\n        text=\"Input Styles\"\n        usage=\"Useful for 1-off exceptions.  Try to steer towards presets for this kind of thing.\"\n      >\n        <State initial={{ value: \"fancy colour\" }}>\n          {({ state, setState }) => (\n            <TextField\n              onChangeText={(value) => setState({ value })}\n              value={state.value}\n              label=\"Name\"\n              inputStyle={{\n                backgroundColor: \"rebeccapurple\",\n                color: \"white\",\n                padding: 40,\n                borderWidth: 10,\n                borderRadius: 4,\n                borderColor: \"hotpink\",\n              }}\n            />\n          )}\n        </State>\n        <Text text=\"* attention designers:  i am so sorry\" preset=\"secondary\" />\n      </UseCase>\n\n      <UseCase text=\"Style array\" usage=\"Useful for 1-off exceptions, but using style arrays.\">\n        <State initial={{ value: \"fancy colour\" }}>\n          {({ state, setState }) => (\n            <TextField\n              onChangeText={(value) => setState({ value })}\n              value={state.value}\n              label=\"Name\"\n              style={styleArray}\n              inputStyle={inputStyleArray}\n            />\n          )}\n        </State>\n        <Text text=\"* attention designers:  i am so sorry\" preset=\"secondary\" />\n      </UseCase>\n    </Story>\n  ))\n  .add(\"Ref Forwarding\", () => (\n    <Story>\n      <UseCase text=\"Ref Forwarding\" usage=\"\">\n        <State initial={{ value: \"fancy colour\" }}>\n          {({ state, setState }) => (\n            <TextField\n              onChangeText={(value) => setState({ value })}\n              value={state.value}\n              label=\"Name\"\n              inputStyle={{\n                backgroundColor: \"rebeccapurple\",\n                color: \"white\",\n                padding: 40,\n                borderWidth: 10,\n                borderRadius: 4,\n                borderColor: \"hotpink\",\n              }}\n              forwardedRef={(ref) => ref}\n              onFocus={() => {\n                if (alertWhenFocused) {\n                  // Prevent text field focus from being repeatedly triggering alert\n                  alertWhenFocused = false\n                  Alert.alert(\"Text field focuesed with forwarded ref!\")\n                }\n              }}\n            />\n          )}\n        </State>\n        <Text text=\"* attention designers:  i am so sorry\" preset=\"secondary\" />\n      </UseCase>\n    </Story>\n  ))\n"]},"metadata":{},"sourceType":"module"}