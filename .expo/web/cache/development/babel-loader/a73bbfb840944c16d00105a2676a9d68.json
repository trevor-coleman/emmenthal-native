{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { color, spacing } from \"../../theme\";\nvar BASE_VIEW = {\n  paddingVertical: spacing[2],\n  paddingHorizontal: spacing[2],\n  borderRadius: 4,\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nvar BASE_TEXT = {\n  paddingHorizontal: spacing[3]\n};\nexport var viewPresets = {\n  primary: _objectSpread(_objectSpread({}, BASE_VIEW), {}, {\n    backgroundColor: color.palette.orange\n  }),\n  link: _objectSpread(_objectSpread({}, BASE_VIEW), {}, {\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    alignItems: \"flex-start\"\n  })\n};\nexport var textPresets = {\n  primary: _objectSpread(_objectSpread({}, BASE_TEXT), {}, {\n    fontSize: 9,\n    color: color.palette.white\n  }),\n  link: _objectSpread(_objectSpread({}, BASE_TEXT), {}, {\n    color: color.text,\n    paddingHorizontal: 0,\n    paddingVertical: 0\n  })\n};","map":{"version":3,"sources":["/Users/trevorcoleman/dev/trevor-coleman/EmmenthalCloud/app/components/button/button.presets.ts"],"names":["color","spacing","BASE_VIEW","paddingVertical","paddingHorizontal","borderRadius","justifyContent","alignItems","BASE_TEXT","viewPresets","primary","backgroundColor","palette","orange","link","textPresets","fontSize","white","text"],"mappings":";;;;;;AACA,SAASA,KAAT,EAAgBC,OAAhB;AAKA,IAAMC,SAAoB,GAAG;AAC3BC,EAAAA,eAAe,EAAEF,OAAO,CAAC,CAAD,CADG;AAE3BG,EAAAA,iBAAiB,EAAEH,OAAO,CAAC,CAAD,CAFC;AAG3BI,EAAAA,YAAY,EAAE,CAHa;AAI3BC,EAAAA,cAAc,EAAE,QAJW;AAK3BC,EAAAA,UAAU,EAAE;AALe,CAA7B;AAQA,IAAMC,SAAoB,GAAG;AAC3BJ,EAAAA,iBAAiB,EAAEH,OAAO,CAAC,CAAD;AADC,CAA7B;AASA,OAAO,IAAMQ,WAAsC,GAAG;AAIpDC,EAAAA,OAAO,kCAAOR,SAAP;AAAkBS,IAAAA,eAAe,EAAEX,KAAK,CAACY,OAAN,CAAcC;AAAjD,IAJ6C;AASpDC,EAAAA,IAAI,kCACCZ,SADD;AAEFE,IAAAA,iBAAiB,EAAE,CAFjB;AAGFD,IAAAA,eAAe,EAAE,CAHf;AAIFI,IAAAA,UAAU,EAAE;AAJV;AATgD,CAA/C;AAiBP,OAAO,IAAMQ,WAAiD,GAAG;AAC/DL,EAAAA,OAAO,kCAAOF,SAAP;AAAkBQ,IAAAA,QAAQ,EAAE,CAA5B;AAA+BhB,IAAAA,KAAK,EAAEA,KAAK,CAACY,OAAN,CAAcK;AAApD,IADwD;AAE/DH,EAAAA,IAAI,kCACCN,SADD;AAEFR,IAAAA,KAAK,EAAEA,KAAK,CAACkB,IAFX;AAGFd,IAAAA,iBAAiB,EAAE,CAHjB;AAIFD,IAAAA,eAAe,EAAE;AAJf;AAF2D,CAA1D","sourcesContent":["import { ViewStyle, TextStyle } from \"react-native\"\nimport { color, spacing } from \"../../theme\"\n\n/**\n * All text will start off looking like this.\n */\nconst BASE_VIEW: ViewStyle = {\n  paddingVertical: spacing[2],\n  paddingHorizontal: spacing[2],\n  borderRadius: 4,\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}\n\nconst BASE_TEXT: TextStyle = {\n  paddingHorizontal: spacing[3],\n}\n\n/**\n * All the variations of text styling within the app.\n *\n * You want to customize these to whatever you need in your app.\n */\nexport const viewPresets: Record<string, ViewStyle> = {\n  /**\n   * A smaller piece of secondard information.\n   */\n  primary: { ...BASE_VIEW, backgroundColor: color.palette.orange } as ViewStyle,\n\n  /**\n   * A button without extras.\n   */\n  link: {\n    ...BASE_VIEW,\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    alignItems: \"flex-start\",\n  } as ViewStyle,\n}\n\nexport const textPresets: Record<ButtonPresetNames, TextStyle> = {\n  primary: { ...BASE_TEXT, fontSize: 9, color: color.palette.white } as TextStyle,\n  link: {\n    ...BASE_TEXT,\n    color: color.text,\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n  } as TextStyle,\n}\n\n/**\n * A list of preset names.\n */\nexport type ButtonPresetNames = keyof typeof viewPresets\n"]},"metadata":{},"sourceType":"module"}