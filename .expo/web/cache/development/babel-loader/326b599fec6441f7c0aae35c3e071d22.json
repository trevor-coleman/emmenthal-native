{"ast":null,"code":"import * as React from \"react\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\";\nimport { Text, FormRow } from \"../\";\nimport { color } from \"../../theme/color\";\nvar TEXT_STYLE_OVERRIDE = {\n  color: color.storybookTextColor\n};\nvar arrayStyle = [{\n  borderWidth: 5\n}, {\n  borderColor: \"#32cd32\"\n}];\nstoriesOf(\"FormRow\", module).addDecorator(function (fn) {\n  return React.createElement(StoryScreen, null, fn());\n}).add(\"Assembled\", function () {\n  return React.createElement(Story, null, React.createElement(UseCase, {\n    text: \"Fully Assembled\",\n    usage: \"FormRow has many parts designed to fit together.  Here is what it looks like all assembled.\"\n  }, React.createElement(FormRow, {\n    preset: \"top\"\n  }, React.createElement(Text, {\n    preset: \"fieldLabel\",\n    style: TEXT_STYLE_OVERRIDE\n  }, \"Hello! I am at the top\")), React.createElement(FormRow, {\n    preset: \"middle\"\n  }, React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Commodi officia quo rerum impedit asperiores hic ex quae, quam dolores vel odit doloribus, tempore atque deserunt possimus incidunt, obcaecati numquam officiis.\")), React.createElement(FormRow, {\n    preset: \"middle\"\n  }, React.createElement(Text, {\n    preset: \"secondary\",\n    style: TEXT_STYLE_OVERRIDE\n  }, \"...one more thing\")), React.createElement(FormRow, {\n    preset: \"bottom\"\n  }, React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"\\uD83C\\uDF89 Footers!\"))), React.createElement(UseCase, {\n    text: \"Alternatives\",\n    usage: \"Less commonly used presets.\"\n  }, React.createElement(FormRow, {\n    preset: \"clear\"\n  }, React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"My borders are still there, but they are clear. This causes the text to still align properly due to the box model of flexbox.\")), React.createElement(FormRow, {\n    preset: \"soloRound\"\n  }, React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"I'm round\")), React.createElement(FormRow, {\n    preset: \"soloStraight\",\n    style: {\n      marginTop: 10,\n      backgroundColor: \"#ffe\"\n    }\n  }, React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"I'm square and have a custom style.\"))));\n}).add(\"Presets\", function () {\n  return React.createElement(Story, null, React.createElement(UseCase, {\n    text: \"top\",\n    usage: \"The top of a form.\"\n  }, React.createElement(FormRow, {\n    preset: \"top\"\n  }, React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"Curved borders at the top.\"), React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"Nothing below\"))), React.createElement(UseCase, {\n    text: \"middle\",\n    usage: \"A row in the middle of a form.\"\n  }, React.createElement(FormRow, {\n    preset: \"middle\"\n  }, React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"No curves and empty at the bottom.\"))), React.createElement(UseCase, {\n    text: \"bottom\",\n    usage: \"The bottom of a form.\"\n  }, React.createElement(FormRow, {\n    preset: \"bottom\"\n  }, React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"Curved at the bottom\"), React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"Line at the top.\"))), React.createElement(UseCase, {\n    text: \"soloRound\",\n    usage: \"A standalone curved form row.\"\n  }, React.createElement(FormRow, {\n    preset: \"soloRound\"\n  }, React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"Curves all around.\"))), React.createElement(UseCase, {\n    text: \"soloStraight\",\n    usage: \"A standalone straight form row.\"\n  }, React.createElement(FormRow, {\n    preset: \"soloStraight\"\n  }, React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"Curves nowhere.\"))), React.createElement(UseCase, {\n    text: \"clear\",\n    usage: \"Identical dimensions but transparent edges.\"\n  }, React.createElement(FormRow, {\n    preset: \"clear\"\n  }, React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"Curves nowhere.\"))));\n}).add(\"Styling\", function () {\n  return React.createElement(Story, null, React.createElement(UseCase, {\n    text: \"Style array\",\n    usage: \"Form row with an array of styles\"\n  }, React.createElement(FormRow, {\n    preset: \"soloStraight\",\n    style: arrayStyle\n  }, React.createElement(Text, {\n    style: TEXT_STYLE_OVERRIDE\n  }, \"Array style.\"))));\n});","map":{"version":3,"sources":["/Users/trevorcoleman/dev/trevor-coleman/EmmenthalCloud/app/components/form-row/form-row.story.tsx"],"names":["React","storiesOf","StoryScreen","Story","UseCase","Text","FormRow","color","TEXT_STYLE_OVERRIDE","storybookTextColor","arrayStyle","borderWidth","borderColor","module","addDecorator","fn","add","marginTop","backgroundColor"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable react-native/no-color-literals */\n\nimport * as React from \"react\"\nimport { storiesOf } from \"@storybook/react-native\"\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\"\nimport { Text, FormRow } from \"../\"\nimport { color } from \"../../theme/color\"\nimport { ViewStyle } from \"react-native\"\n\ndeclare let module\n\nconst TEXT_STYLE_OVERRIDE = {\n  color: color.storybookTextColor,\n}\nconst arrayStyle: ViewStyle[] = [{ borderWidth: 5 }, { borderColor: \"#32cd32\" }]\n\nstoriesOf(\"FormRow\", module)\n  .addDecorator((fn) => <StoryScreen>{fn()}</StoryScreen>)\n  .add(\"Assembled\", () => (\n    <Story>\n      <UseCase\n        text=\"Fully Assembled\"\n        usage=\"FormRow has many parts designed to fit together.  Here is what it looks like all assembled.\"\n      >\n        <FormRow preset=\"top\">\n          <Text preset=\"fieldLabel\" style={TEXT_STYLE_OVERRIDE}>\n            Hello! I am at the top\n          </Text>\n        </FormRow>\n        <FormRow preset=\"middle\">\n          <Text style={TEXT_STYLE_OVERRIDE}>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Commodi officia quo rerum\n            impedit asperiores hic ex quae, quam dolores vel odit doloribus, tempore atque deserunt\n            possimus incidunt, obcaecati numquam officiis.\n          </Text>\n        </FormRow>\n        <FormRow preset=\"middle\">\n          <Text preset=\"secondary\" style={TEXT_STYLE_OVERRIDE}>\n            ...one more thing\n          </Text>\n        </FormRow>\n        <FormRow preset=\"bottom\">\n          <Text style={TEXT_STYLE_OVERRIDE}>ðŸŽ‰ Footers!</Text>\n        </FormRow>\n      </UseCase>\n      <UseCase text=\"Alternatives\" usage=\"Less commonly used presets.\">\n        <FormRow preset=\"clear\">\n          <Text style={TEXT_STYLE_OVERRIDE}>\n            My borders are still there, but they are clear. This causes the text to still align\n            properly due to the box model of flexbox.\n          </Text>\n        </FormRow>\n        <FormRow preset=\"soloRound\">\n          <Text style={TEXT_STYLE_OVERRIDE}>I'm round</Text>\n        </FormRow>\n        <FormRow preset=\"soloStraight\" style={{ marginTop: 10, backgroundColor: \"#ffe\" }}>\n          <Text style={TEXT_STYLE_OVERRIDE}>I'm square and have a custom style.</Text>\n        </FormRow>\n      </UseCase>\n    </Story>\n  ))\n  .add(\"Presets\", () => (\n    <Story>\n      <UseCase text=\"top\" usage=\"The top of a form.\">\n        <FormRow preset=\"top\">\n          <Text style={TEXT_STYLE_OVERRIDE}>Curved borders at the top.</Text>\n          <Text style={TEXT_STYLE_OVERRIDE}>Nothing below</Text>\n        </FormRow>\n      </UseCase>\n      <UseCase text=\"middle\" usage=\"A row in the middle of a form.\">\n        <FormRow preset=\"middle\">\n          <Text style={TEXT_STYLE_OVERRIDE}>No curves and empty at the bottom.</Text>\n        </FormRow>\n      </UseCase>\n      <UseCase text=\"bottom\" usage=\"The bottom of a form.\">\n        <FormRow preset=\"bottom\">\n          <Text style={TEXT_STYLE_OVERRIDE}>Curved at the bottom</Text>\n          <Text style={TEXT_STYLE_OVERRIDE}>Line at the top.</Text>\n        </FormRow>\n      </UseCase>\n      <UseCase text=\"soloRound\" usage=\"A standalone curved form row.\">\n        <FormRow preset=\"soloRound\">\n          <Text style={TEXT_STYLE_OVERRIDE}>Curves all around.</Text>\n        </FormRow>\n      </UseCase>\n      <UseCase text=\"soloStraight\" usage=\"A standalone straight form row.\">\n        <FormRow preset=\"soloStraight\">\n          <Text style={TEXT_STYLE_OVERRIDE}>Curves nowhere.</Text>\n        </FormRow>\n      </UseCase>\n      <UseCase text=\"clear\" usage=\"Identical dimensions but transparent edges.\">\n        <FormRow preset=\"clear\">\n          <Text style={TEXT_STYLE_OVERRIDE}>Curves nowhere.</Text>\n        </FormRow>\n      </UseCase>\n    </Story>\n  ))\n  .add(\"Styling\", () => (\n    <Story>\n      <UseCase text=\"Style array\" usage=\"Form row with an array of styles\">\n        <FormRow preset=\"soloStraight\" style={arrayStyle}>\n          <Text style={TEXT_STYLE_OVERRIDE}>Array style.</Text>\n        </FormRow>\n      </UseCase>\n    </Story>\n  ))\n"]},"metadata":{},"sourceType":"module"}