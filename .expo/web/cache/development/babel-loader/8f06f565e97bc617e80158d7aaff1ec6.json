{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { create } from \"apisauce\";\nimport { DEFAULT_API_CONFIG } from \"./api-config\";\nimport axios from \"axios\";\nexport var Api = function () {\n  function Api() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_API_CONFIG;\n\n    _classCallCheck(this, Api);\n\n    this.config = config;\n  }\n\n  _createClass(Api, [{\n    key: \"setup\",\n    value: function setup() {\n      this.apisauce = create({\n        baseURL: this.config.url,\n        timeout: this.config.timeout,\n        headers: {\n          Accept: \"application/json\"\n        }\n      });\n    }\n  }, {\n    key: \"getCalendars\",\n    value: function getCalendars() {\n      var res;\n      return _regeneratorRuntime.async(function getCalendars$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(\"/users/me/calendarList\", {\n                baseURL: \"https://www.googleapis.com/calendar/v3\",\n                headers: {\n                  Authorization: \"Bearer \" + this.token\n                }\n              }));\n\n            case 2:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"setToken\",\n    value: function setToken(token) {\n      this.token = token;\n    }\n  }, {\n    key: \"clearToken\",\n    value: function clearToken() {\n      this.token = \"\";\n    }\n  }, {\n    key: \"getFreeBusy\",\n    value: function getFreeBusy(_ref) {\n      var timeMin, timeMax, calendars;\n      return _regeneratorRuntime.async(function getFreeBusy$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              timeMin = _ref.timeMin, timeMax = _ref.timeMax, calendars = _ref.calendars;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(axios.post(\"/freeBusy\", {\n                timeMin: timeMin.toISOString(),\n                timeMax: timeMax.toISOString(),\n                items: calendars\n              }, {\n                baseURL: \"https://www.googleapis.com/calendar/v3\",\n                headers: {\n                  Authorization: \"Bearer \" + this.token\n                }\n              }));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return Api;\n}();\nexport var api = new Api();","map":{"version":3,"sources":["/Users/trevorcoleman/dev/trevor-coleman/EmmenthalCloud/app/services/api/api.ts"],"names":["create","DEFAULT_API_CONFIG","axios","Api","config","apisauce","baseURL","url","timeout","headers","Accept","get","Authorization","token","res","timeMin","timeMax","calendars","post","toISOString","items","api"],"mappings":";;;AAAA,SAA2BA,MAA3B,QAAyC,UAAzC;AACA,SAAoBC,kBAApB;AACA,OAAOC,KAAP,MAAiD,OAAjD;AAYA,WAAaC,GAAb;AAiBE,iBAAoD;AAAA,QAAxCC,MAAwC,uEAApBH,kBAAoB;;AAAA;;AAClD,SAAKG,MAAL,GAAcA,MAAd;AACD;;AAnBH;AAAA;AAAA,WA4BE,iBAAQ;AAEN,WAAKC,QAAL,GAAgBL,MAAM,CAAC;AACrBM,QAAAA,OAAO,EAAE,KAAKF,MAAL,CAAYG,GADA;AAErBC,QAAAA,OAAO,EAAE,KAAKJ,MAAL,CAAYI,OAFA;AAGrBC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD;AAHY,OAAD,CAAtB;AAOD;AArCH;AAAA;AAAA,WAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACoBR,KAAK,CAACS,GAAN,CAAU,wBAAV,EAAoC;AACpDL,gBAAAA,OAAO,EAAE,wCAD2C;AAEpDG,gBAAAA,OAAO,EAAE;AACPG,kBAAAA,aAAa,EAAE,YAAY,KAAKC;AADzB;AAF2C,eAApC,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA,+CAOSA,GAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvCF;AAAA;AAAA,WAiDE,kBAASD,KAAT,EAAwB;AACtB,WAAKA,KAAL,GAAaA,KAAb;AACD;AAnDH;AAAA;AAAA,WAqDE,sBAAa;AACX,WAAKA,KAAL,GAAa,EAAb;AACD;AAvDH;AAAA;AAAA,WAyDE;AAAA;AAAA;AAAA;AAAA;AAAA;AACEE,cAAAA,OADF,QACEA,OADF,EAEEC,OAFF,QAEEA,OAFF,EAGEC,SAHF,QAGEA,SAHF;AAAA;AAAA,+CASef,KAAK,CAACgB,IAAN,CAIX,WAJW,EAKX;AAAEH,gBAAAA,OAAO,EAAEA,OAAO,CAACI,WAAR,EAAX;AAAkCH,gBAAAA,OAAO,EAAEA,OAAO,CAACG,WAAR,EAA3C;AAAkEC,gBAAAA,KAAK,EAAEH;AAAzE,eALW,EAMX;AACEX,gBAAAA,OAAO,EAAE,wCADX;AAEEG,gBAAAA,OAAO,EAAE;AACPG,kBAAAA,aAAa,EAAE,YAAY,KAAKC;AADzB;AAFX,eANW,CATf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzDF;;AAAA;AAAA;AAkFA,OAAO,IAAMQ,GAAG,GAAG,IAAIlB,GAAJ,EAAZ","sourcesContent":["import { ApisauceInstance, create } from \"apisauce\"\nimport { ApiConfig, DEFAULT_API_CONFIG } from \"./api-config\"\nimport axios, { AxiosError, AxiosResponse } from \"axios\"\nimport { calendar_v3 } from \"googleapis\"\n\nexport interface IAuthContext {\n  authUrl?: string\n  authenticated: boolean\n  user: any\n}\n\n/**\n * Manages all requests to the API.\n */\nexport class Api {\n  /**\n   * The underlying apisauce instance which performs the requests.\n   */\n  apisauce: ApisauceInstance\n\n  /**\n   * Configurable options.\n   */\n  config: ApiConfig\n  token: string\n\n  /**\n   * Creates the api.\n   *\n   * @param config The configuration to use.\n   */\n  constructor(config: ApiConfig = DEFAULT_API_CONFIG) {\n    this.config = config\n  }\n\n  /**\n   * Sets up the API.  This will be called during the bootup\n   * sequence and will happen before the first React component\n   * is mounted.\n   *\n   * Be as quick as possible in here.\n   */\n  setup() {\n    // construct the apisauce instance\n    this.apisauce = create({\n      baseURL: this.config.url,\n      timeout: this.config.timeout,\n      headers: {\n        Accept: \"application/json\",\n      },\n    })\n  }\n\n  async getCalendars() {\n    const res = await axios.get(\"/users/me/calendarList\", {\n      baseURL: \"https://www.googleapis.com/calendar/v3\",\n      headers: {\n        Authorization: \"Bearer \" + this.token,\n      },\n    })\n    return res\n  }\n\n  setToken(token: string) {\n    this.token = token\n  }\n\n  clearToken() {\n    this.token = \"\"\n  }\n\n  async getFreeBusy({\n    timeMin,\n    timeMax,\n    calendars,\n  }: {\n    timeMin: Date\n    timeMax: Date\n    calendars: { id: string }[]\n  }) {\n    return await axios.post<\n      calendar_v3.Schema$FreeBusyRequest,\n      AxiosResponse<calendar_v3.Schema$FreeBusyResponse>\n    >(\n      \"/freeBusy\",\n      { timeMin: timeMin.toISOString(), timeMax: timeMax.toISOString(), items: calendars },\n      {\n        baseURL: \"https://www.googleapis.com/calendar/v3\",\n        headers: {\n          Authorization: \"Bearer \" + this.token,\n        },\n      },\n    )\n  }\n}\n\nexport const api = new Api()\n"]},"metadata":{},"sourceType":"module"}